<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.net.mayh.indicator.dao.IBaseTableDao">
    <resultMap id="baseTableResult" type="cn.net.mayh.indicator.po.BaseTablePO">
            <result property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="fcu" column="fcu"/>
            <result property="fcd" column="fcd"/>
            <result property="lcu" column="lcu"/>
            <result property="lcd" column="lcd"/>
            <result property="delFlag" column="del_flag"/>
    </resultMap>

    <sql id="sql_query_column_list">
            ,a.id as id
            ,a.name as name
            ,a.fcu as fcu
            ,a.fcd as fcd
            ,a.lcu as lcu
            ,a.lcd as lcd
            ,a.del_flag as delFlag
    </sql>

    <sql id="sql_insert_column_list">
        <trim prefix="" prefixOverrides=",">
                ,id
                ,name
                ,fcu
                ,fcd
                ,lcu
                ,lcd
                ,del_flag
        </trim>
    </sql>

    <sql id="sql_insert_property_list">
        <trim prefix="" prefixOverrides=",">
                <choose>
                    <when test="@cn.net.mayh.util.MyStringUtils@isNotBlank(id)">
                        ,#{id}
                    </when>
                    <otherwise>
                        ,null
                    </otherwise>
                </choose>
                <choose>
                    <when test="@cn.net.mayh.util.MyStringUtils@isNotBlank(name)">
                        ,#{name}
                    </when>
                    <otherwise>
                        ,null
                    </otherwise>
                </choose>
                <choose>
                    <when test="@cn.net.mayh.util.MyStringUtils@isNotBlank(fcu)">
                        ,#{fcu}
                    </when>
                    <otherwise>
                        ,null
                    </otherwise>
                </choose>
                <choose>
                    <when test="fcd != null">
                        ,#{fcd}
                    </when>
                    <otherwise>
                        ,null
                    </otherwise>
                </choose>
                <choose>
                    <when test="@cn.net.mayh.util.MyStringUtils@isNotBlank(lcu)">
                        ,#{lcu}
                    </when>
                    <otherwise>
                        ,null
                    </otherwise>
                </choose>
                <choose>
                    <when test="lcd != null">
                        ,#{lcd}
                    </when>
                    <otherwise>
                        ,null
                    </otherwise>
                </choose>
                <choose>
                    <when test="@cn.net.mayh.util.MyStringUtils@isNotBlank(delFlag)">
                        ,#{delFlag}
                    </when>
                    <otherwise>
                        ,null
                    </otherwise>
                </choose>
        </trim>
    </sql>

    <sql id="sql_update_all_list">
        <set>
                ,id = #{id}
                ,name = #{name}
                ,fcu = #{fcu}
                ,fcd = #{fcd}
                ,lcu = #{lcu}
                ,lcd = #{lcd}
                ,del_flag = #{delFlag}
        </set>
    </sql>


    <sql id="sql_update_selective_list">
        <set>
                    <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(po.id)">
                    ,id = #{po.id}
                </if>
                    <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(po.name)">
                    ,name = #{po.name}
                </if>
                    <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(po.fcu)">
                    ,fcu = #{po.fcu}
                </if>
                    <if test="po.fcd != null">
                    ,fcd = #{po.fcd}
                </if>
                    <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(po.lcu)">
                    ,lcu = #{po.lcu}
                </if>
                    <if test="po.lcd != null">
                    ,lcd = #{po.lcd}
                </if>
                    <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(po.delFlag)">
                    ,del_flag = #{po.delFlag}
                </if>
        </set>
    </sql>


    <sql id="sql_condition">
                <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(qo.id)">
                AND a.id = #{qo.id}
            </if>
                <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(qo.name)">
                AND a.name = #{qo.name}
            </if>
                <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(qo.fcu)">
                AND a.fcu = #{qo.fcu}
            </if>
                <if test="qo.fcd != null">
                AND a.fcd = #{qo.fcd}
            </if>
                <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(qo.lcu)">
                AND a.lcu = #{qo.lcu}
            </if>
                <if test="qo.lcd != null">
                AND a.lcd = #{qo.lcd}
            </if>
                <if test="@cn.net.mayh.util.MyStringUtils@isNotBlank(qo.delFlag)">
                AND a.del_flag = #{qo.delFlag}
            </if>
    </sql>

    <select id="getById" resultType="cn.net.mayh.indicator.po.BaseTablePO">
        select
        <trim prefix="" prefixOverrides=",">
            <include refid="sql_query_column_list"/>
        </trim>
        from base_table a
        where id = #{id}
    </select>

    <select id="get" resultType="cn.net.mayh.indicator.po.BaseTablePO">
        select
        <trim prefix="" prefixOverrides=",">
            <include refid="sql_query_column_list"/>
        </trim>
        from base_table a
        <where>
            <include refid="sql_condition"/>
        </where>
    </select>


    <select id="findList" resultType="cn.net.mayh.indicator.po.BaseTablePO">
        select
        <trim prefix="" prefixOverrides=",">
            <include refid="sql_query_column_list"/>
        </trim>
        from base_table a
        <where>
            <include refid="sql_condition"/>
            and a.del_flag = #{@cn.net.mayh.Constants@DEL_FLAG_NORMAL}
        </where>
    </select>

    <select id="findAllList" resultType="cn.net.mayh.indicator.po.BaseTablePO">
        select
        <trim prefix="" prefixOverrides=",">
            <include refid="sql_query_column_list"/>
        </trim>
        from base_table a
        <where>
            <include refid="sql_condition"/>
        </where>
    </select>

    <insert id="insert">
        INSERT INTO base_table (
        <include refid="sql_insert_column_list"/>
        ) VALUES (
        <include refid="sql_insert_property_list"/>
        )
    </insert>

    <insert id="insertBatch">
        insert into base_table (
        <include refid="sql_insert_column_list"/>
        ) VALUES
        <foreach collection="poList" item="qo" index="index" separator=",">
            (
            <include refid="sql_insert_property_list"/>
            )
        </foreach>
    </insert>


    <update id="updateByPk">
        UPDATE base_table a
        <include refid="sql_update_selective_list"/>
        where id = po.#{id}
    </update>


    <update id="update">
        UPDATE base_table a
        <include refid="sql_update_selective_list"/>
        <where>
            <include refid="sql_condition"/>
        </where>
    </update>

    <update id="updateNullAbleById">
        UPDATE base_table a
        <include refid="sql_update_all_list"/>
        where id = po.#{id}
    </update>


    <update id="updateNullAble">
        UPDATE base_table a
        <include refid="sql_update_all_list"/>
        <where>
            <include refid="sql_condition"/>
        </where>
    </update>



    <delete id="deleteLogincById">
        update base_table a
        set del_flag = #{@cn.net.mayh.Constants@DEL_FLAG_DELETE}
        where id = #{id}
    </delete>

    <delete id="deleteLoginc">
        update base_table a
        set del_flag = #{@cn.net.mayh.Constants@DEL_FLAG_DELETE}
        <where>
            <include refid="sql_condition"/>
        </where>
    </delete>

</mapper>
